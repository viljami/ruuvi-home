[workspace]
members = [
  "packages/api",
  "packages/mqtt-reader",
  "packages/ruuvi-decoder",
  "packages/postgres-store",
]
resolver = "2"

# Workspace-wide package settings
[workspace.package]
edition = "2021"
rust-version = "1.75"
authors = ["Viljami Peltola"]
description = "Ruuvi Gateway Home Edition for hosting on Rasperry PI sensor data collector and web page for display"
license = "MIT"
repository = "https://github.com/viljami/ruuvi-home"

# Strict lints for all workspace members - matches CI pipeline strictness
[workspace.lints.clippy]
# === PANIC AND ERROR HANDLING (Critical for production) ===
# These are "warn" at workspace level but denied in non-test code via #![cfg_attr]
unwrap_used = "warn"
expect_used = "warn"
panic = "deny"
unimplemented = "deny"
todo = "deny"

# === PEDANTIC LINTS (Code quality and maintainability) ===
pedantic = { level = "deny", priority = -1 }
# Allow some pedantic lints that are too noisy or not applicable
must_use_candidate = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
doc_markdown = "allow"

# === SPECIFIC HIGH-VALUE LINTS ===
# Memory safety and performance
indexing_slicing = "deny"
arithmetic_side_effects = "warn"

# Code quality
redundant_closure_for_method_calls = "deny"
unnecessary_wraps = "deny"
used_underscore_binding = "deny"

# Documentation and public API
missing_const_for_fn = "warn"

[workspace.lints.rust]
# Memory safety
unsafe_code = "forbid"

# Unused code detection
unused = { level = "deny", priority = -1 }
dead_code = "deny"

# Missing implementations
missing_debug_implementations = "warn"

# Shared dependencies for workspace
[workspace.dependencies]
tokio = { version = "1.45.1", features = ["full"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
anyhow = "1.0.98"
thiserror = "2.0.12"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
clap = { version = "4.5.39", features = ["derive"] }
