# Ruuvi Home Environment Variables Configuration
# Copy this file to .env and customize for your environment
# 
# SECURITY WARNING: Never commit the actual .env file to version control!
# This file contains example values only - replace with real values for production.

# =============================================================================
# MQTT Configuration
# =============================================================================

# MQTT Broker connection details
MQTT_HOST=localhost
MQTT_PORT=1883
MQTT_TOPIC=ruuvi/gateway/data

# MQTT Authentication (optional - leave empty for anonymous access)
# Set both username and password, or leave both empty
MQTT_USERNAME=
MQTT_PASSWORD=

# =============================================================================
# PostgreSQL + TimescaleDB Configuration  
# =============================================================================

# PostgreSQL connection details
DATABASE_URL=postgresql://ruuvi:ruuvi_secret@localhost:5432/ruuvi_home

# Alternative format for separate components
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=ruuvi_home
POSTGRES_USER=ruuvi
POSTGRES_PASSWORD=ruuvi_secret

# =============================================================================
# API Server Configuration
# =============================================================================

# Port for the REST API server
API_PORT=8080

# CORS (Cross-Origin Resource Sharing) Configuration
# Allowed origins for frontend applications (comma-separated)
# Set this to your frontend URL when running frontend and API on different ports
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =============================================================================
# MQTT Simulator Configuration (Development Only)
# =============================================================================

# Simulator behavior settings
PUBLISH_INTERVAL=5.0
NUM_SENSORS=3

# Example Gateway MAC address - replace with your actual Ruuvi Gateway MAC
# Format: XX:XX:XX:XX:XX:XX (must be exactly 17 characters)
GATEWAY_MAC=AA:BB:CC:DD:EE:FF

# =============================================================================
# Frontend Configuration
# =============================================================================

# API URL for frontend to connect to backend
REACT_APP_API_URL=http://localhost:8080

# Node environment (development, production, test)
NODE_ENV=development

# =============================================================================
# Logging Configuration
# =============================================================================

# Rust logging level (error, warn, info, debug, trace)
RUST_LOG=info

# Optional log file path (defaults to /tmp/mqtt-reader.log if not set)
LOG_FILEPATH=/var/log/ruuvi-home/mqtt-reader.log

# =============================================================================
# Production Security Notes
# =============================================================================
#
# 1. POSTGRES_PASSWORD: Use a strong password for production
# 2. DATABASE_URL: Ensure secure connection string in production
# 3. GATEWAY_MAC: Use your actual Ruuvi Gateway MAC address
# 4. MQTT_USERNAME/PASSWORD: Set up authentication for production MQTT broker
# 5. REACT_APP_API_URL: Update to your production domain/IP
# 6. RUST_LOG: Set to 'warn' or 'error' in production for performance
# 7. CORS_ALLOWED_ORIGINS: Restrict to specific domains in production
#    (e.g., https://yourdomain.com,https://www.yourdomain.com)
#
# =============================================================================
# Raspberry Pi Deployment Notes
# =============================================================================
#
# For Raspberry Pi deployment:
# - MQTT_HOST should be 'localhost' if running MQTT broker on same Pi
# - DATABASE_URL should use 'localhost' for local PostgreSQL + TimescaleDB
# - Ensure PostgreSQL data directory has proper permissions
# - Consider using systemd environment files for service management
# - TimescaleDB provides excellent compression for long-term storage
#
# =============================================================================